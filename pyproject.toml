[project]
    name = "LangMax"
    version = "0.1.0"
    description = "Leveraging the capabilities of LLMs to improve day-to-day tasks."
    authors = [
        { name = "Alex", email = "30626291+ipruning@users.noreply.github.com" },
    ]
    readme = "README.md"
    requires-python = ">= 3.12"
    dependencies = [
        "autocorrect-py>=2.9.0",
        "banks>=0.4.1",
        "bm25s[full]>=0.1.7",
        "controlflow>=0.8.1",
        "dspy-ai>=2.4.10",
        "einops>=0.8.0",
        "fire>=0.6.0",
        "gradio>=4.37.1",
        "great-tables>=0.9.0",
        "httpx[socks]>=0.27.0",
        "jinja2>=3.1.4",
        "langchain>=0.2.6",
        "langdetect>=1.0.9",
        "litellm>=1.40.27",
        "llama-index>=0.10.50",
        "lmql>=0.7.3",
        "marimo>=0.6.23",
        "matplotlib>=3.9.0",
        "mlx-lm>=0.14.3",
        "mlx>=0.15.1",
        "modal>=0.63.7",
        "numpy<2.0.0",
        "ollama>=0.2.1",
        "openai>=1.35.4",
        "pandas>=2.2.2",
        "parea-ai>=0.2.180",
        "pathvalidate>=3.2.0",
        "polars>=0.20.31",
        "pypinyin>=0.51.0",
        "python-dotenv>=1.0.1",
        "rich>=13.7.1",
        "sentencepiece>=0.2.0",
        "sglang[openai]>=0.1.17",
        "streamlit>=1.36.0",
        "tenacity>=8.4.2",
        "tiktoken>=0.7.0",
        "tqdm>=4.66.4",
        "transformers[torch]>=4.41.2",
        "wandb>=0.17.3",
    ]

[build-system]
    requires      = ["hatchling"]
    build-backend = "hatchling.build"

[tool.rye]
    managed = true
    dev-dependencies = [
        "commitizen>=3.27.0",
        "coverage[toml]>=7.5.4",
        "debugpy>=1.8.2",
        "mypy>=1.10.1",
        "nox>=2024.4.15",
        "pre-commit>=3.7.1",
        "pytest-cov>=5.0.0",
        "pytest>=8.2.2",
        "ruff>=0.4.10",
    ]

[tool.hatch.metadata]
    allow-direct-references = true

[tool.hatch.build.targets.wheel]
    packages = ["src/tghl"]

[tool.ruff]
    # https://docs.astral.sh/ruff/configuration/
    # Exclude a variety of commonly ignored directories.
    exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".git-rewrite",
        ".hg",
        ".ipynb_checkpoints",
        ".mypy_cache",
        ".nox",
        ".pants.d",
        ".pyenv",
        ".pytest_cache",
        ".pytype",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        ".vscode",
        "__pypackages__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "node_modules",
        "site-packages",
        "venv",
    ]

    # Same as Black.
    line-length  = 120
    indent-width = 4

[tool.ruff.lint]
    # Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
    # Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
    # McCabe complexity (`C901`) by default.
    select = ["E4", "E7", "E9", "F"]
    ignore = ["E501"]

    # Allow fix for all enabled rules (when `--fix`) is provided.
    fixable   = ["ALL"]
    unfixable = []

    # Allow unused variables when underscore-prefixed.
    dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
    # Like Black, use double quotes for strings.
    quote-style = "double"

    # Like Black, indent with spaces, rather than tabs.
    indent-style = "space"

    # Like Black, respect magic trailing commas.
    skip-magic-trailing-comma = false

    # Like Black, automatically detect the appropriate line ending.
    line-ending = "auto"

    # Enable auto-formatting of code examples in docstrings. Markdown,
    # reStructuredText code/literal blocks and doctests are all supported.
    #
    # This is currently disabled by default, but it is planned for this
    # to be opt-out in the future.
    docstring-code-format = false

    # Set the line length limit used when formatting code snippets in
    # docstrings.
    #
    # This only has an effect when the `docstring-code-format` setting is
    # enabled.
    docstring-code-line-length = "dynamic"

[tool.mypy]
    ignore_missing_imports = true
    strict                 = true

[tool.coverage.run]
    omit = [
        ".*",
        "*/site-packages/*",
        "*/__init__.py",
        "*/__main__.py",
        "*/tests",
        "*/excp.py",
    ]

[tool.coverage.report]
    fail_under   = 70
    show_missing = true

[tool.pytest.ini_options]
    python_files = ["test_*.py"]
    testpaths    = ["tests"]

[tool.pyright]
    venvPath = "."
    venv     = ".venv"
