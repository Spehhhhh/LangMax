###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "// client<llm> FastCerebras {\n//   provider openai\n//   options {\n//     model \"llama3.1-8b\"\n//     api_key env.CEREBRAS_API_KEY\n//     base_url \"https://api.cerebras.ai/v1/\"\n//     temperature \"1.0\"\n//     default_role \"user\"\n//   }\n// }\n\nclient<llm> FastGPT {\n  provider openai\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\n// client<llm> SmartGPT {\n//   provider openai\n//   options {\n//     model \"gpt-4o\"\n//     api_key env.OPENAI_API_KEY\n//   }\n// }\n\n// client<llm> FastClaude {\n//   provider anthropic\n//   options {\n//     model \"claude-3-haiku-20240307\"\n//     api_key env.ANTHROPIC_API_KEY\n//   }\n// }\n\n// client<llm> SmartClaude {\n//   provider anthropic\n//   options {\n//     model \"claude-3-5-sonnet-20240620\"\n//     api_key env.ANTHROPIC_API_KEY\n//   }\n// }\n\n// client<llm> Fast {\n//   provider round-robin\n//   options {\n//     strategy [FastOpenAI, FastClaude]\n//   }\n// }\n\n// client<llm> Production {\n//   provider fallback\n//   options {\n//     strategy [SmartGPT, SmartClaude]\n//   }\n// }\n",
    "generators.baml": "generator target {\n    output_type \"python/pydantic\"\n    output_dir \"../\"\n    version \"0.70.5\"\n    default_client_mode async\n}\n",
    "resume.baml": "class Resume {\n  name string\n  email string\n  experience string[]\n  skills string[]\n}\n\nfunction ExtractResume(resume: string) -> Resume {\n  client FastGPT\n  prompt #\"\n    Extract from this content:\n    {{ resume }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\ntest vaibhav_resume {\n  functions [ExtractResume]\n  args {\n    resume #\"\n      Vaibhav Gupta\n      vbv@boundaryml.com\n\n      Experience:\n      - Founder at BoundaryML\n      - CV Engineer at Google\n      - CV Engineer at Microsoft\n\n      Skills:\n      - Rust\n      - C++\n    \"#\n  }\n}\n",
}

def get_baml_files():
    return file_map